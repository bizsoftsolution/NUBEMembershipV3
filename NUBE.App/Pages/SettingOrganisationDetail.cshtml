@inject IOrganisationDetailRepository repOrganisationDetail


<div class="container" style="height:350px; overflow:auto">

    <div>
        <div class="form-group @(!repOrganisationDetail.IsValidName(repOrganisationDetail.data)? "text-danger" : "text-success")">
            <label for="Name">Name : </label>
            <input type="text" class="form-control @(!repOrganisationDetail.IsValidName(repOrganisationDetail.data)? "border-danger" : "border-success")" id="Name" bind="@repOrganisationDetail.data.Name" />
            <span class="help-block">
                @if (string.IsNullOrWhiteSpace(repOrganisationDetail.data.Name))
                {
                    <b>Reuired</b>
                }
                else if (repOrganisationDetail.ExistName(repOrganisationDetail.data))
                {
                    <b>Already Exist</b>
                }
            </span>
        </div>

        <div class="form-group">
            <label for="Address">Address : </label>
            <textarea id="Address" bind="@repOrganisationDetail.data.Address" type="text" class="form-control"></textarea>
        </div>
        <div class="form-group @(repOrganisationDetail.data.CityId==0 ? "text-danger" : "text-success")">
            <label for="City">City : </label>
            <SelectCity />
            <input list="lstCity" id="City" bind="@repOrganisationDetail.CityName" class="form-control  @(  repOrganisationDetail.data.CityId == 0 ? "border-danger" : "border-success")" type="text" />
            <span class="help-block">
                @if (string.IsNullOrWhiteSpace(repOrganisationDetail.CityName))
                {
                    <b>Reuired</b>
                }
                else if (repOrganisationDetail.data.CityId == 0)
                {
                    <b>Enter Valid City</b>
                }
            </span>
        </div>
        <div class="form-group">
            <label for="State">State : </label>
            <input  id="State" bind="@repOrganisationDetail.StateName" readonly="readonly" type="text" class="form-control" />
        </div>
        <div class="form-group">
            <label for="Country">Country : </label>
            <input id="Country" bind="@repOrganisationDetail.CountryName" readonly="readonly" type="text" class="form-control" />
        </div>
        <div class="form-group">
            <label for="PostalCode">Postal Code : </label>
            <input id="PostalCode" bind="@repOrganisationDetail.data.PostalCode" type="text" class="form-control" />
        </div>

        <div class="form-group">
            <label for="PhoneNo">Phone No : </label>
            <input id="PhoneNo" bind="@repOrganisationDetail.data.PhoneNo" type="text" class="form-control" />
        </div>

    </div>

    <div class="text-right">
        <button class="btn btn-success" style="width: 100px" onclick="@repOrganisationDetail.SaveForm">Save</button>
        <button class="btn btn-secondary" style="width: 100px" onclick="@repOrganisationDetail.CancelForm">Cancel</button>
    </div>

</div>
<MsgBox MsgData="@repOrganisationDetail.MsgData" />

@functions{

    protected override void OnInit()
    {
        repOrganisationDetail.OnChange += StateHasChanged;
        repOrganisationDetail.GetOrganisationDetail();
    }



}