@inject ICountryRepository repCountry

<div class="container">

    <div class="input-group mb-3">        
        <input type="text" class="form-control" bind="@repCountry.SearchText" placeholder="Search" />
        <div class="input-group-append">
            <button class="btn btn-success" type="submit">Go</button>
        </div>
    </div>

    <div class="d-flex bg-info">
        <div class="p-2 border text-light" style="width:50px">SNo</div>
        <div class="p-2 flex-grow-1 border border-left-0 text-light">
            Country <span class="badge badge-light">@repCountry.ToList.Count()</span>
            <button class="btn btn-light text-info float-right btn-sm" onclick="@repCountry.NewForm">
                <span class="oi oi-plus " aria-hidden="true"></span> NEW
            </button>
        </div>
    </div>
    <div style="height:250px;overflow:auto" class="border">
        @{
                int i = 1;
                foreach (var d in repCountry.ToList)
                {
                <div class="d-flex @( i%2==0? "bg-light" : "")">
                    <div class="p-2 border text-right" style="width:50px">@(i++)</div>
                    <div class="p-2 flex-grow-1 border border-left-0">
                        @d.Name

                        <button class="btn btn-danger text-light mr-1 float-right btn-sm" onclick="@(x=> repCountry.DeleteForm(d))">
                            <i class="material-icons">delete</i>
                        </button>

                        <button class="btn btn-info text-light mr-1 float-right btn-sm" onclick="@( x=> repCountry.EditForm(d) )">
                            <i class="material-icons">edit</i>
                        </button>

                    </div>
                </div>
            }
        }
    </div>
</div>
<MsgBox MsgData="@repCountry.MsgData" />

<Modal IsShow="@repCountry.IsShowForm">

    <ModalHeader>
        @repCountry.FormTile
    </ModalHeader>

    <ModalBody>
        <div class="form-group @(!repCountry.IsValidName(repCountry.data)? "text-danger" : "text-success")">
            <label for="Name">Name : </label>
            <input type="text" class="form-control @(!repCountry.IsValidName(repCountry.data)? "border-danger" : "border-success")" id="Name" bind="@repCountry.data.Name" />
            <span class="help-block">
                @if (string.IsNullOrWhiteSpace(repCountry.data.Name))
                {
                    <b>Reuired</b>
                }
                else if (repCountry.ExistName(repCountry.data))
                {
                    <b>Already Exist</b>
                }
            </span>
        </div>
    </ModalBody>

    <ModalFooter>
        <button class="btn btn-success" style="width: 100px" onclick="@repCountry.SaveForm">Save</button>
        <button class="btn btn-secondary" style="width: 100px" onclick="@repCountry.CancelForm">Cancel</button>
    </ModalFooter>

</Modal>
@functions{
   
    protected override void OnInit()
    {
        repCountry.OnChange += StateHasChanged;
    }
}